using System.Data.SQLite;
using System.Diagnostics;

namespace MDPlogLoader
{
    class Program
    {
        static int Main(string[] args)
        {
            if (args.Length != 1)
            {
                Log("Usage: MDPloadLog <full-path-to-file>", true);
                return 1;
            }

            string filePath = args[0];

            if (!File.Exists(filePath))
            {
                Log($"File not found: {filePath}", true);
                return 1;
            }

            Log(File.ReadAllText(filePath), false, true);
            File.Delete(filePath);

            Log($"Loaded {filePath}", true);

            return 0;
        }

        // =================================
        // Boilerplate functions
        // =================================
        static string GetAppName()
        {
            return Process.GetCurrentProcess().ProcessName;
        }

        static string GetAppDir()
        {
            string dir = Path.Combine(Environment.GetEnvironmentVariable("SYNC_DRIVE_HOME"), @"Apps\CFG2\" + GetAppName());
            if (!Directory.Exists(dir)) { Directory.CreateDirectory(dir); }
            return dir;
        }

        static string GetLogDir()
        {
            string dir = Path.Combine(GetAppDir(), @"Logs");
            if (!Directory.Exists(dir)) { Directory.CreateDirectory(dir); }
            return dir;
        }

        static string GetLogFile()
        {
            return Path.Combine(GetLogDir(), GetAppName()+".log");
        }

        static string GetMDP()
        {
            return Path.Combine(Environment.GetEnvironmentVariable("SYNC_DRIVE_HOME"), "MDP.db");
        }

        static void Log(string message, bool toFile = false, bool toMDP = false)
        {
            Console.WriteLine(message);

            if (toFile)
            {
                string timestamp = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                string logLine = $"{timestamp} - {message}";
                try
                {
                    File.AppendAllText(GetLogFile(), logLine + Environment.NewLine);
                }
                catch { /* Ignore to not block main process */ }
            }

            if (toMDP)
            {
                try
                {
                    string dbPath = GetMDP();
                    string connectionString = "Data Source=" + dbPath + ";Version=3;";

                    using (var connection = new SQLiteConnection(connectionString))
                    {
                        connection.Open();

                        // Create table if it does not exist
                        string createTableSql = @"CREATE TABLE IF NOT EXISTS AUD_LOG (SRC_X TEXT, LOG_X TEXT, CREATED_TS TEXT);";

                        using (var createCmd = new SQLiteCommand(createTableSql, connection))
                        {
                            createCmd.ExecuteNonQuery();
                        }

                        // Insert the log record
                        string insertSql = @"INSERT INTO AUD_LOG (SRC_X, LOG_X, CREATED_TS) VALUES (@src, @logMsg, @createdTs);";

                        using (var insertCmd = new SQLiteCommand(insertSql, connection))
                        {
                            insertCmd.Parameters.AddWithValue("@src", GetAppName());
                            insertCmd.Parameters.AddWithValue("@logMsg", message);
                            insertCmd.Parameters.AddWithValue("@createdTs", DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss"));

                            insertCmd.ExecuteNonQuery();
                        }
                    }
                }
                catch { /* Ignore to not block main process */ }
            }
        }
    }
}